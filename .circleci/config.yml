version: 2.1
jobs:
  build:
    parameters:
      image:
        description: "The CI image to use."
        type: string
      cargo-features:
        description: "The additional cargo features to enable for the build."
        type: string
        default: ""
    docker:
      - image: "<< parameters.image >>"
    steps:
      - checkout
      - restore_cache:
          key: project-cache
      - run:
          name: Sync Azure Functions Languge Worker Protobuf
          command: git submodule sync && git submodule update --init
      - run:
          name: Check source formatting
          command: |
            cargo fmt --version || true
            cargo fmt -- --check
            git diff
      - run:
          name: Check for linter errors
          command: |
            cargo clippy --version || true
            cargo clippy -- -Dwarnings
      - run:
          name: Build
          command: "cargo build --release"
      - run:
          name: Check features
          command: |
            if [ ! -z "<< parameters.cargo-features >>" ]; then
              cd azure-functions
              cargo build --release --features '<< parameters.cargo-features >>'
            fi
      - run:
          name: Compile protobuf files
          command: |
            cd azure-functions-shared
            cargo build --release --features compile_protobufs
            git diff --exit-code -- cache
      - run:
          name: Test
          command: cargo test --release
      - save_cache:
          key: project-cache
          paths:
            - "~/.cargo"
            - "./target"
  build-ci-image:
    parameters:
      image:
        description: "The CI image to build."
        type: string
      directory:
        description: "The directory containing the Dockerfile."
        type: string
    docker:
      - image: docker:stable-git
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Login to Docker Hub
          command: docker login -u="$DOCKER_USER" -p="$DOCKER_PASS"
      - run:
          name: Build CI Docker image
          command: |
            cd << parameters.directory >>
            docker build --pull -t << parameters.image >> .
      - run:
          name: Push CI Docker image
          command: "docker push << parameters.image >>"
workflows:
  commit-stable:
    jobs:
      - build:
          image: peterhuene/azure-functions-rs-ci:stable
          filters:
            branches:
              ignore: gh-pages
  commit-nightly:
    jobs:
      - build:
          image: peterhuene/azure-functions-rs-ci:nightly
          cargo-features: unstable
          filters:
            branches:
              ignore: gh-pages
  build-stable:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build-ci-image:
          directory: docker/ci-stable
          image: peterhuene/azure-functions-rs-ci:stable
      - build:
          requires:
            - build-ci-image
          image: peterhuene/azure-functions-rs-ci:stable
  build-nightly:
      triggers:
        - schedule:
            cron: "0 0 * * *"
            filters:
              branches:
                only:
                  - master
      jobs:
        - build-ci-image:
            directory: docker/ci-nightly
            image: peterhuene/azure-functions-rs-ci:nightly
        - build:
            requires:
              - build-ci-image
            image: peterhuene/azure-functions-rs-ci:nightly
            cargo-features: unstable
